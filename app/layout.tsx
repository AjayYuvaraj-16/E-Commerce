import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import ThemeProvider from "@/theme";
import Header from "@/components/header";
import Footer from "@/components/footer";
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';
import CartProvider  from "@/components/cart/CartProvider";

const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en" suppressHydrationWarning>
                  <head>
        {/* Google Fonts link for Poppins */}
        <link
          href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
          rel="stylesheet"
        />
      </head>
            <body className={`${geistSans.variable} ${geistMono.variable}`}>
                {/*
                in the app router you have to provide the AppRouterCacheProvider
                  *component is responsible for collecting the CSS generated by MUI System on the server, as Next.js is streaming chunks of the .html page to the client.
                  * https://mui.com/material-ui/integrations/nextjs/
                */}
                <CartProvider>
                <AppRouterCacheProvider options={{ key: "css" }}>
                    <ThemeProvider>
                        <Header />
                        {children}
                        <Footer />
                    </ThemeProvider>
                </AppRouterCacheProvider>
                </CartProvider>
            </body>
        </html>
    );
}
